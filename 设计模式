1 依赖倒置原则 Dependence Inversion Principle :抽象不应该依赖于细节，细节应该依赖于抽象，也就是提出“面向接口编程，而不是面向实现编程"
2 接口隔离原则 interface segregation principle ：使用多个专门的借口比使用单一的总借口要好。
                                             也就是不要让单一的接口承担过多的职责，而应该把每个职责分离到多个专门的接口中，进行接口分离
3 合成复用原则 composite reuse principle 在一个新的对象里面使用一些已有的对象，使之成为新对象的一部分。使用合成/聚合，尽量不使用继承
  区分“Is-A”和“Has-A”关系: Is-A是属于的关系，而Has-A表示某一个角色具有某一项责任
4 迪米特法则--最少知识原则：一个对象对其他独享有尽可能少的了解。一个模块或对象应尽量少的与其他实体之间发生相互作用，使得系统功能模块相对独立
5 单一原则：类的职责不应该过多
